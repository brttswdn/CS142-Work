
/**
 * Write a description of class BakeShop here.
 * 
 * @author Britta Swedin 
 * @version 1/28/17
 */
import java.lang.Math;

public class BakeShop
{
    //Fields
    int bakerCount;
    BakeryOrder oneOrder;
    int piesOnOrderCount;
    int cakesOnOrderCount;
    int cupcakesOnOrderCount;
    int orderCount;
    double totalSales;
    

    /**
     * Constructor for objects of class BakeShop
     */
    public BakeShop()
    {
        // initialise instance variables
        
        int bakerCount = 0;
        int x = 0;
    }
    public BakeShop(int bakerCount) {
        if (bakerCount < 0) {
            throw new IllegalArgumentException ("Number of bakers cannot be less than zero.");
        }
        this.bakerCount = bakerCount;
    }
    
    /**
    public void submitOrder(BakeryOrder oneOrder)
    {
        this.oneOrder = oneOrder;
    }
    */

    // Accessors
    public int getPiesOnOrderCount() {
        return this.piesOnOrderCount;
    }
    public int getCakesOnOrderCount() {
        return this.cakesOnOrderCount;
    }
    public int getCupcakesDozOnOrderCount() {
        return this.cupcakesOnOrderCount;
    }
    public int getOrderCount() {
        return this.orderCount;
    }
    public double getTotalSales() {
        return this.totalSales;
    }
    public double getAvgOrderPrice() {
        return totalSales/orderCount;
    }
    public int getBakerCount() {
        int itemCount = cupcakesOnOrderCount + cakesOnOrderCount + piesOnOrderCount;
        int bakerCount = itemCount/25;
        if (itemCount % 25!=0) bakerCount++;
        return bakerCount;
    }
    public String toString() {
        String output = "";
        output = output + "Pies on order = " + getPiesOnOrderCount() + "\n";
        output = output + "Cakes on order = " + getCakesOnOrderCount() + "\n";
        output = output + "Cupcakes on order = " + getCupcakesDozOnOrderCount();
        return output;
    }
    
    public void submitOrder(BakeryOrder oneOrder)
    {
        piesOnOrderCount += oneOrder.getPieCount();
        cakesOnOrderCount += oneOrder.getCakeCount();
        cupcakesOnOrderCount += oneOrder.getCupcakeDozCount();
        orderCount++;
        totalSales += oneOrder.getPrice();
    }

}
